{"version":3,"sources":["Components/Context/UserContext.js","Components/NavBar.jsx","Components/PokeDetails.jsx","Components/Context/withUser.js","Components/PokeList.jsx","Pages/Directory.jsx","Pages/Settings.jsx","API/apiHandler.js","App.jsx","reportWebVitals.js","Components/Context/UserProvider.js","index.js"],"names":["UserContext","React","createContext","NavBar","props","useState","favourites","setFavourites","context","useContext","useEffect","darkMode","user","className","exact","to","PokeDetails","pokemon","setPokemon","a","addAbilities","abilities","aArray","map","n","api","get","ability","url","response","data","Promise","all","abilitiesList","result","name","weight","height","sprites","abilityList","console","log","fetchData","src","alt","charAt","toUpperCase","slice","front_default","effect_entries","language","short_effect","withUser","ComponentToExposeContextTo","Consumer","pokeList","setPokeList","offset","setOffset","pokeTotal","setPokeTotal","limit","then","dbRes","count","results","catch","err","includes","onClick","changePokemon","removeFromFave","addToFave","style","color","Number","Directory","addToFavourites","removeFromFavourites","listLimit","Settings","list","setList","dark","setDark","onSubmit","event","userChange","changeLimit","htmlFor","type","id","onChange","value","target","defaultValue","checked","defaultChecked","service","axios","create","baseURL","process","withCredentials","errorHandler","error","res","userId","userUpdate","patch","pokemonName","App","setListLimit","handleChangeLimit","_id","listLength","handleChangeTheme","theme","handleAddToFavourites","handleRemoveFromFavourites","updateName","undefined","backgroundImage","backgroundSize","length","path","render","historyProps","changeTheme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","UserProvider","state","isLoading","apiHandler","setState","contextValue","this","Provider","children","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68873188.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport default UserContext;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport UserContext from \"./Context/UserContext\";\r\nimport \"../Styles/Navbar.css\";\r\n\r\nconst NavBar = (props) => {\r\n  const [favourites, setFavourites] = useState(null);\r\n  const context = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    setFavourites(props.favourites);\r\n  }, [props.favourites]);\r\n\r\n  if (!context) return <div>loading...</div>;\r\n  const darkMode = context.user.darkMode;\r\n\r\n  return (\r\n    <div className={`navMain ${darkMode ? \"dark-mode\" : \"light-mode\"} `}>\r\n      <ul className=\"navList\">\r\n        <li className=\"navList-item\">\r\n          <NavLink\r\n            exact\r\n            to=\"/\"\r\n            className={`navList-item ${darkMode ? \"dark-mode\" : \"light-mode\"} `}\r\n          >\r\n            <h3>Pokedex</h3>\r\n          </NavLink>\r\n        </li>\r\n        <li\r\n          className={`navList-item ${darkMode ? \"dark-mode\" : \"light-mode\"} `}\r\n        >\r\n          <NavLink\r\n            exact\r\n            to=\"/settings\"\r\n            className={`navList-item ${darkMode ? \"dark-mode\" : \"light-mode\"} `}\r\n          >\r\n            <h3>Settings</h3>\r\n          </NavLink>\r\n        </li>\r\n        <li\r\n          className={`navList-item ${darkMode ? \"dark-mode\" : \"light-mode\"} `}\r\n        >\r\n            <h3>Favourites : {favourites ? favourites : 0}</h3>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport UserContext from './Context/UserContext'\r\nimport api from 'axios';\r\nimport '../Styles/PokeDetails.css'\r\n\r\nconst PokeDetails = (props) => {\r\n\r\n    const context = useContext(UserContext);\r\n    const [pokemon, setPokemon] = useState(null);\r\n\r\n    useEffect(() => {   \r\n\r\n        async function fetchData() {\r\n            try {\r\n    \r\n                const result = await api.get(`https://pokeapi.co/api/v2/pokemon/${props.pokemon}`)\r\n                // const abilities = [];\r\n                // result.data.abilities.forEach(async(ability) => {\r\n                //     const details = await api.get(ability.url)\r\n                // })\r\n                const { name, weight, height, abilities, sprites,} = result.data\r\n                \r\n                async function addAbilities (abilities) {\r\n                    const aArray = abilities.map(async n => {\r\n                        const response = await api.get(n.ability.url);\r\n                        return response.data\r\n                    })                    \r\n                    const abilitiesList = await Promise.all(aArray)\r\n                    return abilitiesList\r\n                } \r\n                \r\n                const abilityList = await addAbilities(abilities)\r\n                // console.log(abilityList);\r\n                const pokemonDetails = { name, weight, height, abilityList, sprites}\r\n\r\n                setPokemon(pokemonDetails)\r\n                \r\n            } catch(err) {\r\n                console.log(err)\r\n            }\r\n        \r\n        }\r\n        fetchData();\r\n\r\n    }, [props.pokemon])\r\n\r\n\r\n    if(!pokemon) return <div className=\"hold-box\"><img className=\"hold-image\" src=\"https://res.cloudinary.com/dahzswwzk/image/upload/v1619195906/pokecard_ujgqy4.jpg\" alt=\"pokecard\"/></div>\r\n    // console.log(pokemon);\r\n\r\n    const darkMode = context.user.darkMode;\r\n\r\n    return (\r\n        <div className={`details-box ${darkMode ? \"dark-mode\" : \"light-mode\"} `}>\r\n            <div className=\"poke-name\">\r\n                <h1>{pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}</h1>\r\n            </div>\r\n            <div className={`poke-image-box ${darkMode ? \"light-mode\" : \"dark-mode\"} `}>\r\n                <img className=\"poke-image\" src={pokemon.sprites.front_default} alt={pokemon.name}/>\r\n            </div>\r\n            <div className=\"databox\">\r\n                <p><b>height: {pokemon.height} dm</b></p>\r\n                <p><b>weight: {pokemon.weight} hg</b></p>\r\n            </div>\r\n            <div className=\"abilities-box\">\r\n                {/* <h3>Abilities</h3> */}\r\n                <table className=\"abilities-table\">\r\n                    {pokemon.abilityList.map(ability => (\r\n                        <tr className=\"abilities-table-row\">\r\n                            <td className=\"abilities-table-title\"><h4>{ability.name.charAt(0).toUpperCase() + ability.name.slice(1)}</h4></td>\r\n                            <td className=\"abilities-table-effect\"><p>{ability.effect_entries[0].language.name === \"en\" ? ability.effect_entries[0].short_effect : ability.effect_entries[1].short_effect }</p></td>\r\n                        </tr>\r\n                    \r\n                    ))}\r\n                \r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokeDetails\r\n","import React from \"react\";\r\nimport UserContext from \"./UserContext\";\r\n\r\nconst withUser = (ComponentToExposeContextTo) => (props) => {\r\n  return (\r\n    <UserContext.Consumer>\r\n      {(context) => <ComponentToExposeContextTo {...props} context={context} />}\r\n    </UserContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default withUser;","import React, { useState, useEffect, useContext } from 'react';\r\nimport UserContext from './Context/UserContext'\r\nimport api from \"axios\";\r\nimport withUser from \"./Context/withUser\";\r\nimport \"../Styles/PokeList.css\";\r\n\r\nconst PokeList = (props) => {\r\n  const context = useContext(UserContext);\r\n  const [pokeList, setPokeList] = useState([]);\r\n  const [offset, setOffset] = useState(0);\r\n  const [pokeTotal, setPokeTotal] = useState(null);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\r\n        `https://pokeapi.co/api/v2/pokemon/?limit=${props.limit}&offset=${offset}`\r\n      )\r\n      .then((dbRes) => {\r\n        setPokeTotal(dbRes.data.count);\r\n        setPokeList(dbRes.data.results);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [offset, props.limit]);\r\n\r\n  function handleMoveListPrev() {\r\n    if (offset === 0) return;\r\n    setOffset(offset - props.limit);\r\n  }\r\n\r\n  function handleMoveListNext() {\r\n    setOffset(offset + props.limit);\r\n  }\r\n\r\n  if (!pokeList) return <div>loading...</div>;\r\n  // console.log(pokeList);\r\n\r\n  const darkMode = context.user.darkMode;\r\n  console.log(darkMode);\r\n\r\n  return (\r\n    <div className=\"pokelist-main\">\r\n        <div className={`poketotal-box ${darkMode ? \"dark-mode\" : \"light-mode\"} `}>\r\n            <h3>Total Pokemon: {pokeTotal}</h3>\r\n        </div>\r\n      <table className=\"pokeTable\">\r\n        <thead className=\"pokeTable-head\" >\r\n          <tr className=\"poke-table-row\">\r\n            <th className=\"poke-table-title\"><h3>Pokemon name</h3></th>\r\n            <th className=\"poke-table-title\"><h3>Add to favourites?</h3></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"pokeTable-body\" >\r\n          {pokeList.map((pokemon) => (\r\n            <tr\r\n              className={`pokeList-item \r\n              ${props.favourites.includes(pokemon.name) && darkMode ? \"dark-mode\" : \"\"} \r\n              ${props.favourites.includes(pokemon.name) && !darkMode ? \"light-mode\" : \"\"} `}\r\n              key={pokemon.name}\r\n            >\r\n              <td\r\n                className=\"pokeList-name\"\r\n                onClick={() => {\r\n                  props.changePokemon(pokemon.name);\r\n                }}\r\n              >\r\n                <h3>{pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}</h3>\r\n              </td>\r\n              {props.favourites.includes(pokemon.name) ? (\r\n                <td className=\"pokeList-favourite\">\r\n                  <button className={`pokelist-button ${darkMode ? \"light-mode\" : \"dark-mode\"} `} onClick={() => props.removeFromFave(pokemon.name)}>\r\n                    Remove\r\n                  </button>\r\n                </td>\r\n              ) : (\r\n                <td className=\"pokeList-favourite\">\r\n                  <button className={`pokelist-button ${darkMode ? \"dark-mode\" : \"light-mode\"} `} onClick={() => props.addToFave(pokemon.name)}>\r\n                    Add\r\n                  </button>\r\n                </td>\r\n              )}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"pageLinks\">\r\n        <p className={`pokelink-button ${darkMode ? \"dark-mode\" : \"light-mode\"} `} onClick={handleMoveListPrev}>Previous</p>\r\n        <p style={{color: \"whitesmoke\"}}>\r\n          {offset + 1} - {Number(props.limit) + Number(offset)}\r\n        </p>\r\n        <p className={`pokelink-button ${darkMode ? \"dark-mode\" : \"light-mode\"} `} onClick={handleMoveListNext}>Next</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withUser(PokeList);\r\n","import React, { useState } from \"react\";\r\nimport PokeDetails from \"../Components/PokeDetails\";\r\nimport PokeList from \"../Components/PokeList\";\r\nimport \"../Styles/Ditectory.css\";\r\n\r\nconst Directory = (props) => {\r\n  const [pokemon, setPokemon] = useState(null);\r\n \r\n\r\n  function handleChangePokemon(pokemon) {\r\n    setPokemon(pokemon);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"directory_main\">\r\n      <div className=\"left-frame\">\r\n        <PokeList\r\n          changePokemon={handleChangePokemon}\r\n          addToFave={props.addToFavourites}\r\n          removeFromFave={props.removeFromFavourites}\r\n          favourites={props.favourites}\r\n          limit={props.listLimit}\r\n        />\r\n      </div>\r\n      <div className=\"right-frame\">\r\n        <PokeDetails pokemon={pokemon} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Directory;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport UserContext from '../Components/Context/UserContext';\r\nimport '../Styles/Setting.css'\r\n\r\n\r\n\r\nconst Settings = (props) => {   \r\n    const context = useContext(UserContext)\r\n\r\n    const [list, setList] = useState(null)\r\n    const [dark, setDark] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setList(props.listLimit)\r\n        setDark(context.user.darkMode)\r\n    }, [props.listLimit, context])\r\n\r\n    function handleChangeList (event) {\r\n        const value = event.target.value\r\n        setList(value)\r\n        \r\n    }\r\n\r\n    function handleChangeMode (event) {\r\n        const value = event.target.checked\r\n        setDark(value)\r\n    }\r\n\r\n    function handleOnSubmit(event) {\r\n        // event.preventDefault();\r\n        const userChange = {\"listLength\": list, \"darkMode\": dark};\r\n        props.changeLimit(userChange)\r\n    }\r\n\r\n    console.log(dark);\r\n\r\n    if (list === null) return <div>loading</div>\r\n\r\n    const darkMode = context.user.darkMode;\r\n\r\n    return (\r\n        <div className=\"settingsMain\">\r\n            <div className=\"settingsBox\">\r\n                <h3>Change Your Settings</h3>\r\n                <form className=\"settingsForm\" onSubmit={handleOnSubmit}>\r\n                \r\n                    <label  className=\"settingsLabel\" htmlFor=\"listLimit\"><h3>List Length: </h3>\r\n                    <input className=\"settingsInput\"  type=\"number\" id=\"listLimit\" name=\"listLimit\" onChange={handleChangeList} defaultValue={list}/>\r\n                    </label>\r\n                    \r\n                    <label className=\"settingsLabel\" htmlFor=\"darkMode\"><h3>Dark Mode?</h3></label>\r\n                    <label  className=\"switch\" htmlFor=\"darkMode\">\r\n                    <input className=\"settingsInput\" type=\"checkbox\" id=\"darkMode\" name=\"darkMode\" onChange={handleChangeMode} defaultChecked={darkMode} />\r\n                    <span className=\"slider\"></span>\r\n                    </label>\r\n\r\n                    <button className={`settingsButton ${darkMode ? \"dark-mode\" : \"light-mode\"} `}><h3>Save</h3></button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import axios from \"axios\";\r\n\r\nconst service = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    withCredentials: true,\r\n  });\r\n\r\nfunction errorHandler(error) {\r\nif (error.response.data) {\r\n    console.log(error.response && error.response.data);\r\n    throw error;\r\n}\r\nthrow error;\r\n}\r\n  \r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default {\r\n    service,\r\n\r\n    getUser() {\r\n        return service\r\n          .get(\"/api/users\")\r\n          .then((res) => res.data)\r\n          .catch(err => {\r\n            console.log(err)  \r\n            });\r\n      },\r\n\r\n    editUser(userId, userUpdate) {\r\n        return service\r\n        .patch(`/api/users/update/${userId}`, userUpdate)\r\n        .then((res) => res.data)\r\n        .catch(errorHandler);\r\n    },\r\n\r\n    addPokemon (userId, pokemonName) {\r\n        return service\r\n          .patch(`/api/users/add/${userId}`, pokemonName)\r\n          .then((res) => res.data)\r\n          .catch(errorHandler);\r\n      },\r\n\r\n    removePokemon(userId, pokemonName) {\r\n    return service\r\n        .patch(`/api/users/remove/${userId}`, pokemonName)\r\n        .then((res) => res.data)\r\n        .catch(errorHandler);\r\n    },\r\n\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavBar from \"./Components/NavBar\";\nimport Directory from \"./Pages/Directory\";\nimport Settings from \"./Pages/Settings\";\nimport UserContext from \"./Components/Context/UserContext\"\nimport api from './API/apiHandler'\n\nfunction App() {\n  const context = useContext(UserContext)\n  const [favourites, setFavourites] = useState(null);\n  const [listLimit, setListLimit] = useState(null);\n\n  useEffect(() => {\n    \n    api\n    .getUser()\n    .then(user => {\n      setFavourites(user.favourites)\n      setListLimit(user.listLength)\n    })\n    \n  }, [])\n\n\n  function handleChangeLimit(limit) {\n\n    const userId = context.user._id\n    api\n    .editUser(userId, limit)\n    .then(response => setListLimit(response.listLength))\n\n  }\n\n  function handleChangeTheme(theme) {\n\n    const userId = context.user._id\n    api\n    .editUser(userId, theme)\n    .then(response => setListLimit(response.listLength))\n\n  }\n\n  function handleAddToFavourites(pokemon) {\n    const userId = context.user._id\n    const updateName = {\"name\": pokemon}\n    api\n    .addPokemon(userId, updateName)\n    .then(response => setFavourites(response.favourites))\n  }\n\n  function handleRemoveFromFavourites(pokemon) {\n    const updateName = {\"name\": pokemon}\n    const userId = context.user._id\n    api\n    .removePokemon(userId, updateName)\n    .then(response => setFavourites(response.favourites))\n  }\n\n\n  if (favourites === null) return <div>loading...</div>\n  if (context === undefined) return <div>loading...</div>\n  const darkMode = context.user.darkMode;\n\n  return (\n    <div \n      className=\"App\"\n      style={{backgroundImage: `${darkMode ? `url(\"https://res.cloudinary.com/dahzswwzk/image/upload/v1619439020/dark_background_whh8ck.jpg\")` : `url(\"https://res.cloudinary.com/dahzswwzk/image/upload/v1619439018/light_background_okqvst.jpg\")` }`,\n    backgroundSize: \"cover\"}}\n    >\n      <NavBar favourites={favourites.length} />\n\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(historyProps) => {\n            return (\n              <Directory\n                {...historyProps}\n                favourites={favourites}\n                listLimit={listLimit}\n                addToFavourites={handleAddToFavourites}\n                removeFromFavourites={handleRemoveFromFavourites}\n              />\n            );\n          }}\n        />\n        <Route \n          exact \n          path=\"/settings\" \n          render={(historyProps) => {\n            return (\n              <Settings\n                {...historyProps}\n                listLimit={listLimit}\n                changeLimit={handleChangeLimit}\n                changeTheme={handleChangeTheme} \n              />\n            );\n          }} \n          />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport UserContext from \"./UserContext\";\r\nimport apiHandler from \"../../API/apiHandler\";\r\n\r\nclass UserProvider extends React.Component {\r\n  state = {\r\n    user: null,\r\n    isLoading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    apiHandler\r\n      .getUser()\r\n      .then((data) => {\r\n        this.setState({ user: data, isLoading: false });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ isLoading: false });\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const contextValue = {\r\n      user: this.state.user,\r\n      isLoading: this.state.isLoading,\r\n    };\r\n\r\n\r\n    return (\r\n      <UserContext.Provider value={contextValue}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default UserProvider;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport UserProvider from './Components/Context/UserProvider'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <UserProvider>\n        <App />\n      </UserProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}